# Connection URL for the MySQL database
spring.datasource.url=jdbc:mysql://localhost:3306/new_jpa_lecture?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true

# Database credentials
spring.datasource.username=root
spring.datasource.password=password

# Keep the connection alive if idle for a long time (important in production)
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1

# ============================================
# JPA / HIBERNATE
# ============================================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each SQL query (slows down the system, remove in production)
spring.jpa.show-sql=true

# Hibernate DDL auto configuration (create, create-drop, update)
# Schema will be automatically updated accordingly to Java entities found in
# the project. Set to none if its up and running.
# DDL stands for Data Definition Language.
spring.jpa.hibernate.ddl-auto=create
# Will take a look at the classes and create tables according to the class structure.

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Optional settings of connection pool if you ever have more than one user
# Reference: https://www.baeldung.com/spring-boot-tomcat-connection-pool
spring.datasource.tomcat.initial-size=15
spring.datasource.tomcat.max-wait=20000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-idle=15
spring.datasource.tomcat.min-idle=8
spring.datasource.tomcat.default-auto-commit=true
